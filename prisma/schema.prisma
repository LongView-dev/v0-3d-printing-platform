generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String    @unique
  password      String
  name          String?
  bio           String?
  avatar        String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  models        Model[]
  likes         Like[]
  comments      Comment[]
}

model Model {
  id            String    @id @default(cuid())
  title         String
  description   String?
  fileUrl       String
  thumbnailUrl  String?
  format        String    // STL, OBJ, GLB etc
  fileSize      Int
  tags          String?   // JSON array of tags
  isPublic      Boolean   @default(true)
  downloadCount Int       @default(0)
  viewCount     Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  likes         Like[]
  comments      Comment[]
  
  @@index([userId])
  @@index([isPublic])
}

model Like {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  modelId       String
  model         Model     @relation(fields: [modelId], references: [id], onDelete: Cascade)
  
  @@unique([userId, modelId])
  @@index([userId])
  @@index([modelId])
}

model Comment {
  id            String    @id @default(cuid())
  content       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  modelId       String
  model         Model     @relation(fields: [modelId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([modelId])
}
